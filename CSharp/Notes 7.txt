Inheritance Types : 1. Single, 2. MultiLevel, 3. Hierarchial, 4. Hybrid
Inheritance Options: 'Is a Relationship'
            Eg : Circle is a Shape
                 Car is a Vehicle
                 
               'Has a Relationship' - aggregation/composition 
            Eg : Car has an Engine 
                 Humans have Heart


Interface : Interfaces are like classes, which contains properties, methods, delegates, events etc - but only declarations and no implementation
 - Interface members are public by default
 - They do not allow explicit modifiers
 - A class can inherit from one or more Interfaces
 - An interface can inherit from other interfaces
 - The class that inherits from an interface, will have to provide implementation to all the members of the interface
 - The class that inherits form one interface and if that interface has its own oarent, then the class will have to implement all the methods of its base, and the base's base. Interface Chaining
 - We cannot instantiate an instance of an interface, but we can create objects and refer to the derived class/classes

Advantages of Interfaces :
   - Loose coupling
   - Total abstraction
   - component-based programming
   - They act like plug and play features of the application
 
Explicit Implementation of Interface Methods



      
Types of classes :