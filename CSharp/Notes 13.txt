Enhancements :
 - AutoProperty Initializers n Getter only property

 - Dictionary Initializers 

 - Throws  - throw

 - Iterators : is a method which is used in an array or collections to retrieve the elements one by one. 
- it uses the yield statement along with return to return the element.
- If we want to stop the iteration, we use yield break
- The return type of the Iterator is IEnumerable, IEnumerable<T>, IEnumerator, IEnumerator<T>
- Points to remember :
    1. Iterators can be used as a method, or as a property (get accessor)
    2. Cannot use iterators in evenst, constructors, finalizers
    3. yield is not a reserved word, but when we use it along the return or break statements, it conveys a special meaning
    4. We can use multiple yield statements
    5. Can be used with generic and non-generic collections

 - Local Functions : Whenever we want to execute some piece of code multiple times, then we can put those codes in an inner function known as Local Function. 
 - We can then call the inner function from the parent/outer function again and again
 - We cannot overload local functions
 - Access Specifiers are not allowed
 - All variables in the enclosing scope, can be accessed.

 - NameofExpression : is an operator which is essential whenever
 there is error in the code, which is notified by the compiler.
-  Names of different code artifacts are returned using nameof operator

 - Exception Filters : allows us to specify a conditional clause for each catch block
 - we need declare the filters in the same line as that of the catch block



-Await in catch and Finally blocks : await a keyword is used to suspend the execution of the method until the awaited task is complete


 