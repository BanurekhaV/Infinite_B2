Error Handling : In order to subtly exit out of an erroneous statements/procedures

Error number : is a unique identifier given for each and every error. The value will be below 50000 for predefined system errors and above 50000-2147483647 for user defined error numbers

Error Message : It is piece of brief information describing the error occurred, which should be maximum of 2047 characters

Severity Level : Tells about the importance of the error which can be ranging between 0-24
   0-9 : are not severe. Can be considered as information or status messages
   11-16 : Indicates errors created by the user
   17-19 : are Software errors that cannot be corrected by the user, and must be reported to the admin
   20-24 : are fatal errors, which can damage the database or system. Automatically the database connection is terminated

State : It is an arbitrary value that is not important , and can range between 0-127. We can use this whenever the same error has to occur in multiple places

Raiserror is a function which raises an error with specific error no/id and displays the error message associated with it
 
 raiserror(errorid/errormsg, severity,state) or raiserror(errorid,severity,state,error message)

We can also throw errors :

  throw error_id, errormsg, state

Throw is just throwing an error, while raiserror is raising an error and then throwing

--To add user defined error messages to the already existing sys.messages table, we use the below procedure

sp_addmessage <msgid/errorid>, <severity>, <message>



--Functions :are reusable piece of code that can be called from select statement, where or join clauses
They are of 2 types
    1. Scalar :
    - Functions can accept 0 - many input parameters, and will have to return a single value
    - can return int,char,float,varchar,etc.)
    - cannot return text,ntext,image,timestamp
    2. Table-Valued 
          a. Inline Table Valued : 
      - Returns a table of values
      - does not contain begin or end statements

          b. Multistatement Table Valued:
      - Contains many sql statements
      - in enclosed within a begin and end clauses
      - Returns a user created table variable


syntax:
create function <fnname> (@ parameter1 datatype,@parameter2 datatype)
returns datatype      (specifies what data type is expected out of the function)
as
 begin
  function body...
<return> the data       (actual returning of data takes place)
end


Difference between functions and procedures

1. A function must return a value whereas a procedure never returns a value explicitly
2. A function can have only input parameters, whereas a procedure can have both input and output parameters
3. A function can be used only to perform select operations, whereas a procedure can be used to perform select and dml operations
4. A function cannot handle errors or transactions, whereas a procedure can have transactions and error handling mechanisms implemented
5. A function can call only other functions, whereas a procedure can call other procedures and other functions
6. UDF can be used in SQL statements of where/having/join/select clauses, whereas stored procedures cannot be 



